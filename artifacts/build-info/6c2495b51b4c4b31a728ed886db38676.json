{
	"id": "6c2495b51b4c4b31a728ed886db38676",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"sources": {
			"struct.sol": {
				"content": "pragma solidity 0.8.0;\r\nstruct student{\r\n    uint roll;\r\n    string name;\r\n}\r\ncontract truct\r\n{\r\n\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"struct.sol": {
				"truct": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"struct.sol\":78:100  contract truct\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"struct.sol\":78:100  contract truct\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205a1cc7a0e086150d78f5b17e99dc75dd9a014376e859fbfa8437a8f4f82ff9e764736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212205a1cc7a0e086150d78f5b17e99dc75dd9a014376e859fbfa8437a8f4f82ff9e764736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GAS SHR 0xC7 LOG0 0xE0 DUP7 ISZERO 0xD PUSH25 0xF5B17E99DC75DD9A014376E859FBFA8437A8F4F82FF9E76473 PUSH16 0x6C634300080000330000000000000000 ",
							"sourceMap": "78:22:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea26469706673582212205a1cc7a0e086150d78f5b17e99dc75dd9a014376e859fbfa8437a8f4f82ff9e764736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GAS SHR 0xC7 LOG0 0xE0 DUP7 ISZERO 0xD PUSH25 0xF5B17E99DC75DD9A014376E859FBFA8437A8F4F82FF9E76473 PUSH16 0x6C634300080000330000000000000000 ",
							"sourceMap": "78:22:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 78,
									"end": 100,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 78,
									"end": 100,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 78,
									"end": 100,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 78,
									"end": 100,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 78,
									"end": 100,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 78,
									"end": 100,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 78,
									"end": 100,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 78,
									"end": 100,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 78,
									"end": 100,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 78,
									"end": 100,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 78,
									"end": 100,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 78,
									"end": 100,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 78,
									"end": 100,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 78,
									"end": 100,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 78,
									"end": 100,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 78,
									"end": 100,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 78,
									"end": 100,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 78,
									"end": 100,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 78,
									"end": 100,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 78,
									"end": 100,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 78,
									"end": 100,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205a1cc7a0e086150d78f5b17e99dc75dd9a014376e859fbfa8437a8f4f82ff9e764736f6c63430008000033",
									".code": [
										{
											"begin": 78,
											"end": 100,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 78,
											"end": 100,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 78,
											"end": 100,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 78,
											"end": 100,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 78,
											"end": 100,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 78,
											"end": 100,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"struct.sol\":\"truct\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"struct.sol\":{\"keccak256\":\"0xf9a1292da35e0790366d28d5f24bf08cff22d5f3d7cbf6a7aa9a820b5ccc9f53\",\"urls\":[\"bzz-raw://9170f37197395f42d442c30a8421e470a67a5afe867b7583ca5039c1b22dd9cc\",\"dweb:/ipfs/QmYP2yovNp7ujxSMuwGYArfTgVyfGZYbPpdMRnuejSnGtf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> struct.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "struct.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"struct.sol": {
				"ast": {
					"absolutePath": "struct.sol",
					"exportedSymbols": {
						"student": [
							6
						],
						"truct": [
							7
						]
					},
					"id": 8,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:22:0"
						},
						{
							"canonicalName": "student",
							"id": 6,
							"members": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "roll",
									"nodeType": "VariableDeclaration",
									"scope": 6,
									"src": "45:9:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "45:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 5,
									"mutability": "mutable",
									"name": "name",
									"nodeType": "VariableDeclaration",
									"scope": 6,
									"src": "61:11:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 4,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "61:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "student",
							"nodeType": "StructDefinition",
							"scope": 8,
							"src": "24:52:0",
							"visibility": "public"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 7,
							"linearizedBaseContracts": [
								7
							],
							"name": "truct",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 8,
							"src": "78:22:0"
						}
					],
					"src": "0:100:0"
				},
				"id": 0
			}
		}
	}
}