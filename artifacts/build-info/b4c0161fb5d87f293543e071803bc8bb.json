{
	"id": "b4c0161fb5d87f293543e071803bc8bb",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"sources": {
			"lottery.sol": {
				"content": "pragma solidity 0.8.0;\r\n\r\ncontract lottery\r\n{\r\n\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"lottery.sol": {
				"lottery": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"lottery.sol\":26:50  contract lottery\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"lottery.sol\":26:50  contract lottery\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b0b1dfce9245c99e1f0dbb8c0654cee1c5854b6ec8cdb17473b0b3c755e6a74264736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220b0b1dfce9245c99e1f0dbb8c0654cee1c5854b6ec8cdb17473b0b3c755e6a74264736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB0 0xB1 0xDF 0xCE SWAP3 GASLIMIT 0xC9 SWAP15 0x1F 0xD 0xBB DUP13 MOD SLOAD 0xCE 0xE1 0xC5 DUP6 0x4B PUSH15 0xC8CDB17473B0B3C755E6A74264736F PUSH13 0x63430008000033000000000000 ",
							"sourceMap": "26:24:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220b0b1dfce9245c99e1f0dbb8c0654cee1c5854b6ec8cdb17473b0b3c755e6a74264736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB0 0xB1 0xDF 0xCE SWAP3 GASLIMIT 0xC9 SWAP15 0x1F 0xD 0xBB DUP13 MOD SLOAD 0xCE 0xE1 0xC5 DUP6 0x4B PUSH15 0xC8CDB17473B0B3C755E6A74264736F PUSH13 0x63430008000033000000000000 ",
							"sourceMap": "26:24:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 26,
									"end": 50,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 26,
									"end": 50,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 26,
									"end": 50,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 26,
									"end": 50,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 26,
									"end": 50,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 50,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 26,
									"end": 50,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26,
									"end": 50,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 26,
									"end": 50,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 50,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 50,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 26,
									"end": 50,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26,
									"end": 50,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26,
									"end": 50,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 26,
									"end": 50,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 50,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 50,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 50,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 50,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 26,
									"end": 50,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 50,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b0b1dfce9245c99e1f0dbb8c0654cee1c5854b6ec8cdb17473b0b3c755e6a74264736f6c63430008000033",
									".code": [
										{
											"begin": 26,
											"end": 50,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 26,
											"end": 50,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26,
											"end": 50,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26,
											"end": 50,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26,
											"end": 50,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26,
											"end": 50,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lottery.sol\":\"lottery\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"lottery.sol\":{\"keccak256\":\"0x1cf27909900604459d0872430307710c77ff713ea62f45e57cf1bab8d5b33c61\",\"urls\":[\"bzz-raw://61472a2785f4a53e481a43242419359c5f51e0bf1ce0985aeadaa43cbf86b9ea\",\"dweb:/ipfs/QmWt52Ezpjcy8pS2gR6tkzcaFLsQyaYBMw2hD4UxARjAAZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> lottery.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "lottery.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"lottery.sol": {
				"ast": {
					"absolutePath": "lottery.sol",
					"exportedSymbols": {
						"lottery": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:22:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "lottery",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "26:24:0"
						}
					],
					"src": "0:50:0"
				},
				"id": 0
			}
		}
	}
}