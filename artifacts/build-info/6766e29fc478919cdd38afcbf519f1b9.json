{
	"id": "6766e29fc478919cdd38afcbf519f1b9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.17",
	"solcLongVersion": "0.5.17+commit.d19bba13",
	"input": {
		"language": "Solidity",
		"sources": {
			"array.sol": {
				"content": "// SPDX-Licence-Identifier: GPL-3.0\r\npragma solidity ^0.5.0;\r\n\r\n\r\n\r\n/*\r\ncontract test {\r\n   function testArray() public pure{\r\n      uint len = 7; \r\n      \r\n      //dynamic array\r\n      uint[] memory a = new uint[](7);\r\n      \r\n      //bytes is same as byte[]\r\n      bytes memory b = new bytes(len);\r\n      \r\n      assert(a.length == 7);\r\n      assert(b.length == len);\r\n      \r\n      //access array variable\r\n      a[6] = 8;\r\n      \r\n      //test array variable\r\n      assert(a[6] == 8);\r\n      \r\n      //static array\r\n      uint[3] memory c = [uint(1) , 2, 3];\r\n      assert(c.length == 3);\r\n   }\r\n}\r\n*/\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"sources": {
			"array.sol": {
				"ast": {
					"absolutePath": "array.sol",
					"exportedSymbols": {},
					"id": 2,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:0"
						}
					],
					"src": "37:570:0"
				},
				"id": 0
			}
		}
	}
}