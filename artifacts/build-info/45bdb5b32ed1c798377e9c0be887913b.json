{
	"id": "45bdb5b32ed1c798377e9c0be887913b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"sources": {
			"lottery.sol": {
				"content": "pragma solidity 0.8.0;\r\n\r\ncontract Struct\r\n{\r\n    \r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"lottery.sol": {
				"Struct": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"lottery.sol\":26:53  contract Struct\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"lottery.sol\":26:53  contract Struct\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220cbafc0e532902cab3c172c424ae8830213e8f3c52391cee93ed2815bb119ca6464736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220cbafc0e532902cab3c172c424ae8830213e8f3c52391cee93ed2815bb119ca6464736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB 0xAF 0xC0 0xE5 ORIGIN SWAP1 0x2C 0xAB EXTCODECOPY OR 0x2C TIMESTAMP 0x4A 0xE8 DUP4 MUL SGT 0xE8 RETURN 0xC5 0x23 SWAP2 0xCE 0xE9 RETURNDATACOPY 0xD2 DUP2 JUMPDEST 0xB1 NOT 0xCA PUSH5 0x64736F6C63 NUMBER STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "26:27:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220cbafc0e532902cab3c172c424ae8830213e8f3c52391cee93ed2815bb119ca6464736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB 0xAF 0xC0 0xE5 ORIGIN SWAP1 0x2C 0xAB EXTCODECOPY OR 0x2C TIMESTAMP 0x4A 0xE8 DUP4 MUL SGT 0xE8 RETURN 0xC5 0x23 SWAP2 0xCE 0xE9 RETURNDATACOPY 0xD2 DUP2 JUMPDEST 0xB1 NOT 0xCA PUSH5 0x64736F6C63 NUMBER STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "26:27:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 26,
									"end": 53,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 26,
									"end": 53,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 26,
									"end": 53,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 26,
									"end": 53,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 26,
									"end": 53,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 53,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 26,
									"end": 53,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26,
									"end": 53,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 26,
									"end": 53,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 53,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 53,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 26,
									"end": 53,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26,
									"end": 53,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26,
									"end": 53,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 26,
									"end": 53,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 53,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 53,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 53,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 53,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 26,
									"end": 53,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 53,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cbafc0e532902cab3c172c424ae8830213e8f3c52391cee93ed2815bb119ca6464736f6c63430008000033",
									".code": [
										{
											"begin": 26,
											"end": 53,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 26,
											"end": 53,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26,
											"end": 53,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26,
											"end": 53,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26,
											"end": 53,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26,
											"end": 53,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lottery.sol\":\"Struct\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"lottery.sol\":{\"keccak256\":\"0xb1016165e3132a055eb557b5b82eaffec6e2d4424bfcc6d8f612bca839883a49\",\"urls\":[\"bzz-raw://2a98a5310581a932a37ddbf9691e4028452f38879ffcf5c727b93c7b460ea633\",\"dweb:/ipfs/QmQNZzugijMWLrBmhtLRj4cfwyXDjZSrBPJnbrPrVWoeJn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> lottery.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "lottery.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"lottery.sol": {
				"ast": {
					"absolutePath": "lottery.sol",
					"exportedSymbols": {
						"Struct": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:22:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "Struct",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "26:27:0"
						}
					],
					"src": "0:53:0"
				},
				"id": 0
			}
		}
	}
}